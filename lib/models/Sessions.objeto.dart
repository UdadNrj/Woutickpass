class Session {
  String uuid;
  String user;
  String event;
  String session;
  String ticket;
  String referer;
  String refererUser;
  int price;
  String ticketCode;
  String cashlessNumber;
  DateTime accessedAt;
  DateTime checkinAt;
  DateTime lastEntryAt;
  DateTime lastExitAt;
  bool isRefundable;
  String name;
  String dni;
  DateTime birthdate;
  String email;
  String phone;
  String gender;
  String postalCode;
  int age;
  String question1Text;
  String question1Answer;
  String question2Text;
  String question2Answer;
  String question3Text;
  String question3Answer;
  String numeration;
  String seatName;
  DateTime startDate;
  DateTime startDateVip;
  String extra1Title;
  String extra1Text;
  String extra2Title;
  String extra2Text;
  String extra3Title;
  String extra3Text;
  String holderName;
  String holderSurname;
  String placeName;
  String placeAddress;

  Session({
    required this.uuid,
    required this.user,
    required this.event,
    required this.session,
    required this.ticket,
    required this.referer,
    required this.refererUser,
    required this.price,
    required this.ticketCode,
    required this.cashlessNumber,
    required this.accessedAt,
    required this.checkinAt,
    required this.lastEntryAt,
    required this.lastExitAt,
    required this.isRefundable,
    required this.name,
    required this.dni,
    required this.birthdate,
    required this.email,
    required this.phone,
    required this.gender,
    required this.postalCode,
    required this.age,
    required this.question1Text,
    required this.question1Answer,
    required this.question2Text,
    required this.question2Answer,
    required this.question3Text,
    required this.question3Answer,
    required this.numeration,
    required this.seatName,
    required this.startDate,
    required this.startDateVip,
    required this.extra1Title,
    required this.extra1Text,
    required this.extra2Title,
    required this.extra2Text,
    required this.extra3Title,
    required this.extra3Text,
    required this.holderName,
    required this.holderSurname,
    required this.placeName,
    required this.placeAddress,
  });

  Map<String, dynamic> toJson() {
    return {
      'uuid': uuid,
      'user': user,
      'event': event,
      'session': session,
      'ticket': ticket,
      'referer': referer,
      'referer_user': refererUser,
      'price': price,
      'ticket_code': ticketCode,
      'cashless_number': cashlessNumber,
      'accessed_at': accessedAt.toIso8601String(),
      'checkin_at': checkinAt.toIso8601String(),
      'last_entry_at': lastEntryAt.toIso8601String(),
      'last_exit_at': lastExitAt.toIso8601String(),
      'is_refundable': isRefundable ? 1 : 0,
      'name': name,
      'dni': dni,
      'birthdate': birthdate.toIso8601String(),
      'email': email,
      'phone': phone,
      'gender': gender,
      'postal_code': postalCode,
      'age': age,
      'question1_text': question1Text,
      'question1_answer': question1Answer,
      'question2_text': question2Text,
      'question2_answer': question2Answer,
      'question3_text': question3Text,
      'question3_answer': question3Answer,
      'numeration': numeration,
      'seat_name': seatName,
      'start_date': startDate.toIso8601String(),
      'start_date_vip': startDateVip.toIso8601String(),
      'extra1_title': extra1Title,
      'extra1_text': extra1Text,
      'extra2_title': extra2Title,
      'extra2_text': extra2Text,
      'extra3_title': extra3Title,
      'extra3_text': extra3Text,
      'holder_name': holderName,
      'holder_surname': holderSurname,
      'place_name': placeName,
      'place_address': placeAddress,
    };
  }

  factory Session.fromJson(Map<String, dynamic> json) {
    return Session(
      uuid: json['uuid'],
      user: json['user'],
      event: json['event'],
      session: json['session'],
      ticket: json['ticket'],
      referer: json['referer'],
      refererUser: json['referer_user'],
      price: json['price'],
      ticketCode: json['ticket_code'],
      cashlessNumber: json['cashless_number'],
      accessedAt: DateTime.parse(json['accessed_at']),
      checkinAt: DateTime.parse(json['checkin_at']),
      lastEntryAt: DateTime.parse(json['last_entry_at']),
      lastExitAt: DateTime.parse(json['last_exit_at']),
      isRefundable: json['is_refundable'] == 1,
      name: json['name'],
      dni: json['dni'],
      birthdate: DateTime.parse(json['birthdate']),
      email: json['email'],
      phone: json['phone'],
      gender: json['gender'],
      postalCode: json['postal_code'],
      age: json['age'],
      question1Text: json['question1_text'],
      question1Answer: json['question1_answer'],
      question2Text: json['question2_text'],
      question2Answer: json['question2_answer'],
      question3Text: json['question3_text'],
      question3Answer: json['question3_answer'],
      numeration: json['numeration'],
      seatName: json['seat_name'],
      startDate: DateTime.parse(json['start_date']),
      startDateVip: DateTime.parse(json['start_date_vip']),
      extra1Title: json['extra1_title'],
      extra1Text: json['extra1_text'],
      extra2Title: json['extra2_title'],
      extra2Text: json['extra2_text'],
      extra3Title: json['extra3_title'],
      extra3Text: json['extra3_text'],
      holderName: json['holder_name'],
      holderSurname: json['holder_surname'],
      placeName: json['place_name'],
      placeAddress: json['place_address'],
    );
  }
}
